/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.104
 * Generated at: 2025-08-11 12:02:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.localconnect.dto.ServiceDto;
import com.localconnect.repository.ServiceRepositoryImpl;
import com.localconnect.dto.UserDto;

public final class search_002dservices_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("com.localconnect.dto.ServiceDto");
    _jspx_imports_classes.add("com.localconnect.dto.UserDto");
    _jspx_imports_classes.add("com.localconnect.repository.ServiceRepositoryImpl");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

UserDto user = (UserDto) session.getAttribute("user");
if (user == null || !"user".equals(user.getRole())) {
response.sendRedirect("login.jsp");
return;
}

String bookingMsg = (String) session.getAttribute("bookingMessage");
String keyword = request.getParameter("search");

ServiceRepositoryImpl repo = new ServiceRepositoryImpl();
List<ServiceDto> results;

    if (keyword != null && !keyword.trim().isEmpty()) {
    results = repo.searchByKeyword(keyword);
    } else {
    results = repo.getAllActive();
    }
    
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <title>Search Services</title>\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" />\r\n");
      out.write("    </head>\r\n");
      out.write("    <body class=\"container mt-4\">\r\n");
      out.write("    ");
 if (bookingMsg != null) { 
      out.write("\r\n");
      out.write("    <div class=\"alert alert-info\">");
      out.print( bookingMsg );
      out.write("</div>\r\n");
      out.write("    ");

    session.removeAttribute("bookingMessage");
    
      out.write("\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <a href=\"user-dashboard.jsp\" class=\"btn btn-outline-secondary mb-3\">‚Üê Back to Dashboard</a>\r\n");
      out.write("\r\n");
      out.write("    <h2>Search Services</h2>\r\n");
      out.write("    <form method=\"get\" class=\"mb-4 d-flex gap-2\">\r\n");
      out.write("        <input type=\"text\" name=\"search\" class=\"form-control\"\r\n");
      out.write("               value=\"");
      out.print( keyword != null ? keyword : "" );
      out.write("\"\r\n");
      out.write("        placeholder=\"Search by service name or location...\" />\r\n");
      out.write("        <button type=\"submit\" class=\"btn btn-primary\">Search üîç</button>\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("    ");
 if (results.isEmpty()) { 
      out.write("\r\n");
      out.write("    <p class=\"text-muted\">No services found for \"");
      out.print( keyword );
      out.write("\"</p>\r\n");
      out.write("    ");
 } else { 
      out.write("\r\n");
      out.write("    <table class=\"table table-bordered\">\r\n");
      out.write("        <thead>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <th>Service</th>\r\n");
      out.write("            <th>Location</th>\r\n");
      out.write("            <th>Description</th>\r\n");
      out.write("            <th>Provider</th>\r\n");
      out.write("            <th>Action</th>\r\n");
      out.write("        </tr>\r\n");
      out.write("        </thead>\r\n");
      out.write("        <tbody>\r\n");
      out.write("        ");
 for (ServiceDto s : results) { 
      out.write("\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>");
      out.print( s.getServiceName() );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( s.getLocation() );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( s.getDescription() );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( s.getPostedBy() );
      out.write("</td>\r\n");
      out.write("            <td>\r\n");
      out.write("                <a href=\"view-provider.jsp?id=");
      out.print( s.getPostedById() );
      out.write("\" class=\"btn btn-sm btn-info\">View Provider</a>\r\n");
      out.write("                <!-- ‚úÖ Book button -->\r\n");
      out.write("                <form action=\"book-service\" method=\"post\" style=\"display:inline;\">\r\n");
      out.write("                    <input type=\"hidden\" name=\"serviceId\" value=\"");
      out.print( s.getId() );
      out.write("\" />\r\n");
      out.write("                    <button type=\"submit\" class=\"btn btn-sm btn-success\">Book</button>\r\n");
      out.write("                </form>\r\n");
      out.write("            </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("        </tbody>\r\n");
      out.write("    </table>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("    </body>\r\n");
      out.write("    </html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
