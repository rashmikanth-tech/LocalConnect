/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.104
 * Generated at: 2025-08-10 10:20:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.servlet.http.HttpSession;
import java.util.List;
import com.localconnect.dto.ServiceDto;
import com.localconnect.dto.UserDto;
import com.localconnect.repository.ServiceRepositoryImpl;

public final class provider_002ddashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(7);
    _jspx_imports_classes.add("javax.servlet.http.HttpSession");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.localconnect.dto.ServiceDto");
    _jspx_imports_classes.add("com.localconnect.dto.UserDto");
    _jspx_imports_classes.add("com.localconnect.repository.ServiceRepositoryImpl");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- Updated version of provider-dashboard.jsp with better Bootstrap design and animations -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

String updateMsg = null;
String postMsg = null;
String userName = null;

if (session != null) {
updateMsg = (String) session.getAttribute("updateMessage");
postMsg = (String) session.getAttribute("postMessage");
userName = (UserDto) session.getAttribute("user") != null ? ((UserDto) session.getAttribute("user")).getName() : null;
session.removeAttribute("updateMessage");
session.removeAttribute("postMessage");
}

UserDto user = (UserDto) session.getAttribute("user");
if (user == null || !"provider".equals(user.getRole())) {
response.sendRedirect("login.jsp");
return;
}

ServiceRepositoryImpl repo = new ServiceRepositoryImpl();
String search = request.getParameter("search");
String status = request.getParameter("status");
List<ServiceDto> services;

    if (search != null && !search.isEmpty()) {
    services = repo.searchByEmailAndKeyword(user.getEmail(), search);
    } else if (status != null && !status.isEmpty()) {
    services = repo.getByStatus(user.getEmail(), status);
    } else {
    services = repo.getAllByEmail(user.getEmail());
    }

    int total = services.size(), active = 0, inactive = 0;
    for (ServiceDto s : services) {
    if ("active".equalsIgnoreCase(s.getStatus())) active++;
    else if ("inactive".equalsIgnoreCase(s.getStatus())) inactive++;
    }
    
      out.write("\r\n");
      out.write("    ");
 if (services.isEmpty()) { 
      out.write("\r\n");
      out.write("    <tr><td colspan=\"5\" class=\"text-center text-muted\">No services found.</td></tr>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!DOCTYPE html>\r\n");
      out.write("    <html lang=\"en\">\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta charset=\"UTF-8\">\r\n");
      out.write("        <title>Provider Dashboard</title>\r\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css\"/>\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\r\n");
      out.write("\r\n");
      out.write("        <style>\r\n");
      out.write("            body {\r\n");
      out.write("                background: linear-gradient(to bottom right, #e6f0ff, #ffffff);\r\n");
      out.write("            }\r\n");
      out.write("            .navbar {\r\n");
      out.write("                box-shadow: 0 2px 5px rgba(0,0,0,0.1);\r\n");
      out.write("            }\r\n");
      out.write("            .dashboard-stats .col {\r\n");
      out.write("                border-radius: 12px;\r\n");
      out.write("                background-color: #ffffff;\r\n");
      out.write("                box-shadow: 0 4px 8px rgba(0,0,0,0.05);\r\n");
      out.write("                transition: all 0.3s ease-in-out;\r\n");
      out.write("            }\r\n");
      out.write("            .dashboard-stats .col:hover {\r\n");
      out.write("                transform: translateY(-5px);\r\n");
      out.write("            }\r\n");
      out.write("            .fade-in {\r\n");
      out.write("                animation: fadeIn 1s ease-in;\r\n");
      out.write("            }\r\n");
      out.write("            @keyframes fadeIn {\r\n");
      out.write("                from {opacity: 0; transform: translateY(20px);}\r\n");
      out.write("                to {opacity: 1; transform: translateY(0);}\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .navbar {\r\n");
      out.write("  position: sticky;\r\n");
      out.write("  top: 0;\r\n");
      out.write("  z-index: 1000;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("        </style>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("\r\n");
      out.write("    <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("            <a class=\"navbar-brand animate__animated animate__fadeInLeft\" href=\"#\">LocalConnect</a>\r\n");
      out.write("            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">\r\n");
      out.write("                <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("            </button>\r\n");
      out.write("            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("                <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n");
      out.write("                    <li class=\"nav-item\">\r\n");
      out.write("                        <a class=\"nav-link active\" href=\"#\">Dashboard</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li class=\"nav-item\">\r\n");
      out.write("                        <a class=\"nav-link\" href=\"manage-bookings.jsp\"><i class=\"fas fa-calendar-check\"></i> Bookings</a>\r\n");
      out.write("\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li class=\"nav-item\">\r\n");
      out.write("                        <a class=\"nav-link\" href=\"provider-profile.jsp\">Profile</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                </ul>\r\n");
      out.write("                <span class=\"navbar-text me-3\">Welcome, ");
      out.print( userName );
      out.write("</span>\r\n");
      out.write("                <a href=\"logout.jsp\" class=\"btn btn-outline-light btn-sm\">Logout</a>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container mt-4 fade-in\">\r\n");
      out.write("        <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n");
      out.write("            <h2 class=\"animate__animated animate__fadeInDown\">Provider Dashboard</h2>\r\n");
      out.write("            <a class=\"btn btn-outline-info\" href=\"view-provider.jsp?id=");
      out.print( user.getId() );
      out.write("\" target=\"_blank\">View Public Profile</a>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        ");
 if (postMsg != null) { 
      out.write("\r\n");
      out.write("        <div class=\"alert alert-info animate__animated animate__fadeIn\">");
      out.print( postMsg );
      out.write("</div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("        ");
 if (updateMsg != null) { 
      out.write("\r\n");
      out.write("        <div class=\"alert alert-success animate__animated animate__fadeIn\">");
      out.print( updateMsg );
      out.write("</div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <form method=\"get\" class=\"row g-2 mb-4\">\r\n");
      out.write("            <div class=\"col-md-6\">\r\n");
      out.write("                <input type=\"text\" name=\"search\" class=\"form-control\" placeholder=\"Search services...\"\r\n");
      out.write("                       value=\"");
      out.print( request.getParameter("search") != null ? request.getParameter("search") : "" );
      out.write("\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-md-3\">\r\n");
      out.write("                <select name=\"status\" class=\"form-select\">\r\n");
      out.write("                    <option value=\"\">All Status</option>\r\n");
      out.write("                    <option value=\"active\" ");
      out.print( "active".equals(request.getParameter("status")) ? "selected" : "" );
      out.write(">Active</option>\r\n");
      out.write("                    <option value=\"inactive\" ");
      out.print( "inactive".equals(request.getParameter("status")) ? "selected" : "" );
      out.write(">Inactive</option>\r\n");
      out.write("                </select>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-md-3 d-flex gap-2\">\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-primary\">Search</button>\r\n");
      out.write("                ");
 if (request.getParameter("search") != null || request.getParameter("status") != null) { 
      out.write("\r\n");
      out.write("                <a href=\"provider-dashboard.jsp\" class=\"btn btn-outline-secondary\">Reset</a>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("        <a href=\"post-service.jsp\" class=\"btn btn-success mb-3\">+ Post New Service</a>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"row dashboard-stats text-center mb-4\">\r\n");
      out.write("            <div class=\"col p-3\">Total: <strong>");
      out.print( total );
      out.write("</strong></div>\r\n");
      out.write("            <div class=\"col p-3\">Active: <strong class=\"text-success\">");
      out.print( active );
      out.write("</strong></div>\r\n");
      out.write("            <div class=\"col p-3\">Inactive: <strong class=\"text-danger\">");
      out.print( inactive );
      out.write("</strong></div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"table-responsive\">\r\n");
      out.write("            <table class=\"table table-bordered table-hover align-middle\">\r\n");
      out.write("                <thead class=\"table-light\">\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>Service</th>\r\n");
      out.write("                    <th>Location</th>\r\n");
      out.write("                    <th>Contact</th>\r\n");
      out.write("                    <th>Description</th>\r\n");
      out.write("                    <th>Actions</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("                </thead>\r\n");
      out.write("                <tbody>\r\n");
      out.write("                ");
 for (ServiceDto s : services) { 
      out.write("\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>");
      out.print( s.getServiceName() );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( s.getLocation() );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( s.getContact() );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( s.getDescription() );
      out.write("</td>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        <a href=\"edit-service.jsp?id=");
      out.print( s.getId() );
      out.write("\" class=\"btn btn-warning btn-sm\">Edit</a>\r\n");
      out.write("                        <a href=\"delete-service?id=");
      out.print( s.getId() );
      out.write("\" class=\"btn btn-danger btn-sm\"\r\n");
      out.write("                           onclick=\"return confirm('Are you sure you want to delete this service?')\">Delete</a>\r\n");
      out.write("                        <a href=\"toggle-status?id=");
      out.print( s.getId() );
      out.write("\" class=\"btn btn-secondary btn-sm\">\r\n");
      out.write("                            ");
      out.print( "active".equalsIgnoreCase(s.getStatus()) ? "Disable" : "Enable" );
      out.write("\r\n");
      out.write("                        </a>\r\n");
      out.write("                    </td>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        <span class=\"badge bg-");
      out.print( s.getStatus().equalsIgnoreCase("active") ? "success" : "secondary" );
      out.write("\">\r\n");
      out.write("                        ");
      out.print( s.getStatus().toUpperCase() );
      out.write("\r\n");
      out.write("                        </span>\r\n");
      out.write("                    </td>\r\n");
      out.write("\r\n");
      out.write("                </tr>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("                </tbody>\r\n");
      out.write("            </table>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("    </body>\r\n");
      out.write("    </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
